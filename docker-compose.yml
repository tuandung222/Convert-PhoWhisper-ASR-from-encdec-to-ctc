version: '3.8'

services:
  # API Service
  api:
    build:
      context: .
      dockerfile: api/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./src:/app/src
      - ./api:/app/api
      - ./checkpoints:/app/checkpoints
    environment:
      - PORT=8000
      - INFERENCE_DEVICE=cpu
      - JAEGER_HOST=jaeger
      - JAEGER_PORT=6831
      - ENVIRONMENT=production
    depends_on:
      - jaeger
      - prometheus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - asr-network

  # Streamlit UI
  ui:
    build:
      context: .
      dockerfile: ui/Dockerfile
    ports:
      - "8501:8501"
    environment:
      - API_URL=http://api:8000
    depends_on:
      - api
    volumes:
      - ./ui:/app
    networks:
      - asr-network

  # Gradio Demo App
  gradio:
    build:
      context: .
      dockerfile: src/app/Dockerfile.gradio
    ports:
      - "7860:7860"
    environment:
      - INFERENCE_DEVICE=cpu
      - GRADIO_SHARE=false
    volumes:
      - ./checkpoints:/app/checkpoints
    depends_on:
      - api
    networks:
      - asr-network

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
    restart: unless-stopped
    networks:
      - asr-network

  # Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - asr-network

  # Jaeger for distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "6831:6831/udp"  # accept jaeger.thrift over compact thrift protocol
      - "16686:16686"    # UI port
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    restart: unless-stopped
    networks:
      - asr-network

volumes:
  prometheus_data:
  grafana_data:

networks:
  asr-network:
    driver: bridge

# Node exporter for system metrics
node-exporter:
  image: prom/node-exporter:latest
  volumes:
    - /proc:/host/proc:ro
    - /sys:/host/sys:ro
    - /:/rootfs:ro
  command:
    - '--path.procfs=/host/proc'
    - '--path.sysfs=/host/sys'
    - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
  restart: unless-stopped
  expose:
    - 9100

# cAdvisor for container metrics
cadvisor:
  image: gcr.io/cadvisor/cadvisor:latest
  volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:ro
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    - /dev/disk/:/dev/disk:ro
  ports:
    - "8080:8080"
  restart: unless-stopped 